/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UsersUsersLayoutImport } from './routes/users/_usersLayout'
import { Route as UnauthenticatedLoginImport } from './routes/_unauthenticated/login'
import { Route as AdminAdminLayoutImport } from './routes/_admin/_adminLayout'
import { Route as AdminAdminLayoutIndexImport } from './routes/_admin/_adminLayout/index'
import { Route as AdminAdminLayoutTeachersIdImport } from './routes/_admin/_adminLayout/teachers/$id'
import { Route as AdminAdminLayoutStudentsIdImport } from './routes/_admin/_adminLayout/students/$id'
import { Route as AdminAdminLayoutFormsIdImport } from './routes/_admin/_adminLayout/forms/$id'
import { Route as AdminAdminLayoutEmployeesIdImport } from './routes/_admin/_adminLayout/employees/$id'

// Create Virtual Routes

const UsersImport = createFileRoute('/users')()
const UsersUsersLayoutIndexLazyImport = createFileRoute(
  '/users/_usersLayout/',
)()
const UsersUsersLayoutConferencesIndexLazyImport = createFileRoute(
  '/users/_usersLayout/conferences/',
)()
const UsersUsersLayoutBooksIndexLazyImport = createFileRoute(
  '/users/_usersLayout/books/',
)()
const UsersUsersLayoutArticlesIndexLazyImport = createFileRoute(
  '/users/_usersLayout/articles/',
)()
const AdminAdminLayoutTeachersIndexLazyImport = createFileRoute(
  '/_admin/_adminLayout/teachers/',
)()
const AdminAdminLayoutStudentsIndexLazyImport = createFileRoute(
  '/_admin/_adminLayout/students/',
)()
const AdminAdminLayoutFormsIndexLazyImport = createFileRoute(
  '/_admin/_adminLayout/forms/',
)()
const AdminAdminLayoutEmployeesIndexLazyImport = createFileRoute(
  '/_admin/_adminLayout/employees/',
)()

// Create/Update Routes

const UsersRoute = UsersImport.update({
  path: '/users',
  getParentRoute: () => rootRoute,
} as any)

const UsersUsersLayoutRoute = UsersUsersLayoutImport.update({
  id: '/_usersLayout',
  getParentRoute: () => UsersRoute,
} as any)

const UnauthenticatedLoginRoute = UnauthenticatedLoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AdminAdminLayoutRoute = AdminAdminLayoutImport.update({
  id: '/_admin/_adminLayout',
  getParentRoute: () => rootRoute,
} as any)

const UsersUsersLayoutIndexLazyRoute = UsersUsersLayoutIndexLazyImport.update({
  path: '/',
  getParentRoute: () => UsersUsersLayoutRoute,
} as any).lazy(() =>
  import('./routes/users/_usersLayout/index.lazy').then((d) => d.Route),
)

const AdminAdminLayoutIndexRoute = AdminAdminLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => AdminAdminLayoutRoute,
} as any)

const UsersUsersLayoutConferencesIndexLazyRoute =
  UsersUsersLayoutConferencesIndexLazyImport.update({
    path: '/conferences/',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any).lazy(() =>
    import('./routes/users/_usersLayout/conferences/index.lazy').then(
      (d) => d.Route,
    ),
  )

const UsersUsersLayoutBooksIndexLazyRoute =
  UsersUsersLayoutBooksIndexLazyImport.update({
    path: '/books/',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any).lazy(() =>
    import('./routes/users/_usersLayout/books/index.lazy').then((d) => d.Route),
  )

const UsersUsersLayoutArticlesIndexLazyRoute =
  UsersUsersLayoutArticlesIndexLazyImport.update({
    path: '/articles/',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any).lazy(() =>
    import('./routes/users/_usersLayout/articles/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AdminAdminLayoutTeachersIndexLazyRoute =
  AdminAdminLayoutTeachersIndexLazyImport.update({
    path: '/teachers/',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_admin/_adminLayout/teachers/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AdminAdminLayoutStudentsIndexLazyRoute =
  AdminAdminLayoutStudentsIndexLazyImport.update({
    path: '/students/',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_admin/_adminLayout/students/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AdminAdminLayoutFormsIndexLazyRoute =
  AdminAdminLayoutFormsIndexLazyImport.update({
    path: '/forms/',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_admin/_adminLayout/forms/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AdminAdminLayoutEmployeesIndexLazyRoute =
  AdminAdminLayoutEmployeesIndexLazyImport.update({
    path: '/employees/',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_admin/_adminLayout/employees/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AdminAdminLayoutTeachersIdRoute = AdminAdminLayoutTeachersIdImport.update(
  {
    path: '/teachers/$id',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any,
)

const AdminAdminLayoutStudentsIdRoute = AdminAdminLayoutStudentsIdImport.update(
  {
    path: '/students/$id',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any,
)

const AdminAdminLayoutFormsIdRoute = AdminAdminLayoutFormsIdImport.update({
  path: '/forms/$id',
  getParentRoute: () => AdminAdminLayoutRoute,
} as any)

const AdminAdminLayoutEmployeesIdRoute =
  AdminAdminLayoutEmployeesIdImport.update({
    path: '/employees/$id',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_admin/_adminLayout': {
      id: '/_admin/_adminLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminAdminLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticated/login': {
      id: '/_unauthenticated/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnauthenticatedLoginImport
      parentRoute: typeof rootRoute
    }
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersImport
      parentRoute: typeof rootRoute
    }
    '/users/_usersLayout': {
      id: '/users/_usersLayout'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersUsersLayoutImport
      parentRoute: typeof UsersRoute
    }
    '/_admin/_adminLayout/': {
      id: '/_admin/_adminLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AdminAdminLayoutIndexImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/users/_usersLayout/': {
      id: '/users/_usersLayout/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof UsersUsersLayoutIndexLazyImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/_admin/_adminLayout/employees/$id': {
      id: '/_admin/_adminLayout/employees/$id'
      path: '/employees/$id'
      fullPath: '/employees/$id'
      preLoaderRoute: typeof AdminAdminLayoutEmployeesIdImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/_admin/_adminLayout/forms/$id': {
      id: '/_admin/_adminLayout/forms/$id'
      path: '/forms/$id'
      fullPath: '/forms/$id'
      preLoaderRoute: typeof AdminAdminLayoutFormsIdImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/_admin/_adminLayout/students/$id': {
      id: '/_admin/_adminLayout/students/$id'
      path: '/students/$id'
      fullPath: '/students/$id'
      preLoaderRoute: typeof AdminAdminLayoutStudentsIdImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/_admin/_adminLayout/teachers/$id': {
      id: '/_admin/_adminLayout/teachers/$id'
      path: '/teachers/$id'
      fullPath: '/teachers/$id'
      preLoaderRoute: typeof AdminAdminLayoutTeachersIdImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/_admin/_adminLayout/employees/': {
      id: '/_admin/_adminLayout/employees/'
      path: '/employees'
      fullPath: '/employees'
      preLoaderRoute: typeof AdminAdminLayoutEmployeesIndexLazyImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/_admin/_adminLayout/forms/': {
      id: '/_admin/_adminLayout/forms/'
      path: '/forms'
      fullPath: '/forms'
      preLoaderRoute: typeof AdminAdminLayoutFormsIndexLazyImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/_admin/_adminLayout/students/': {
      id: '/_admin/_adminLayout/students/'
      path: '/students'
      fullPath: '/students'
      preLoaderRoute: typeof AdminAdminLayoutStudentsIndexLazyImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/_admin/_adminLayout/teachers/': {
      id: '/_admin/_adminLayout/teachers/'
      path: '/teachers'
      fullPath: '/teachers'
      preLoaderRoute: typeof AdminAdminLayoutTeachersIndexLazyImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/users/_usersLayout/articles/': {
      id: '/users/_usersLayout/articles/'
      path: '/articles'
      fullPath: '/users/articles'
      preLoaderRoute: typeof UsersUsersLayoutArticlesIndexLazyImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/books/': {
      id: '/users/_usersLayout/books/'
      path: '/books'
      fullPath: '/users/books'
      preLoaderRoute: typeof UsersUsersLayoutBooksIndexLazyImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/conferences/': {
      id: '/users/_usersLayout/conferences/'
      path: '/conferences'
      fullPath: '/users/conferences'
      preLoaderRoute: typeof UsersUsersLayoutConferencesIndexLazyImport
      parentRoute: typeof UsersUsersLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AdminAdminLayoutRoute: AdminAdminLayoutRoute.addChildren({
    AdminAdminLayoutIndexRoute,
    AdminAdminLayoutEmployeesIdRoute,
    AdminAdminLayoutFormsIdRoute,
    AdminAdminLayoutStudentsIdRoute,
    AdminAdminLayoutTeachersIdRoute,
    AdminAdminLayoutEmployeesIndexLazyRoute,
    AdminAdminLayoutFormsIndexLazyRoute,
    AdminAdminLayoutStudentsIndexLazyRoute,
    AdminAdminLayoutTeachersIndexLazyRoute,
  }),
  UnauthenticatedLoginRoute,
  UsersRoute: UsersRoute.addChildren({
    UsersUsersLayoutRoute: UsersUsersLayoutRoute.addChildren({
      UsersUsersLayoutIndexLazyRoute,
      UsersUsersLayoutArticlesIndexLazyRoute,
      UsersUsersLayoutBooksIndexLazyRoute,
      UsersUsersLayoutConferencesIndexLazyRoute,
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_admin/_adminLayout",
        "/_unauthenticated/login",
        "/users"
      ]
    },
    "/_admin/_adminLayout": {
      "filePath": "_admin/_adminLayout.tsx",
      "children": [
        "/_admin/_adminLayout/",
        "/_admin/_adminLayout/employees/$id",
        "/_admin/_adminLayout/forms/$id",
        "/_admin/_adminLayout/students/$id",
        "/_admin/_adminLayout/teachers/$id",
        "/_admin/_adminLayout/employees/",
        "/_admin/_adminLayout/forms/",
        "/_admin/_adminLayout/students/",
        "/_admin/_adminLayout/teachers/"
      ]
    },
    "/_unauthenticated/login": {
      "filePath": "_unauthenticated/login.tsx"
    },
    "/users": {
      "filePath": "users",
      "children": [
        "/users/_usersLayout"
      ]
    },
    "/users/_usersLayout": {
      "filePath": "users/_usersLayout.tsx",
      "parent": "/users",
      "children": [
        "/users/_usersLayout/",
        "/users/_usersLayout/articles/",
        "/users/_usersLayout/books/",
        "/users/_usersLayout/conferences/"
      ]
    },
    "/_admin/_adminLayout/": {
      "filePath": "_admin/_adminLayout/index.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/users/_usersLayout/": {
      "filePath": "users/_usersLayout/index.lazy.tsx",
      "parent": "/users/_usersLayout"
    },
    "/_admin/_adminLayout/employees/$id": {
      "filePath": "_admin/_adminLayout/employees/$id.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/_admin/_adminLayout/forms/$id": {
      "filePath": "_admin/_adminLayout/forms/$id.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/_admin/_adminLayout/students/$id": {
      "filePath": "_admin/_adminLayout/students/$id.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/_admin/_adminLayout/teachers/$id": {
      "filePath": "_admin/_adminLayout/teachers/$id.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/_admin/_adminLayout/employees/": {
      "filePath": "_admin/_adminLayout/employees/index.lazy.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/_admin/_adminLayout/forms/": {
      "filePath": "_admin/_adminLayout/forms/index.lazy.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/_admin/_adminLayout/students/": {
      "filePath": "_admin/_adminLayout/students/index.lazy.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/_admin/_adminLayout/teachers/": {
      "filePath": "_admin/_adminLayout/teachers/index.lazy.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/users/_usersLayout/articles/": {
      "filePath": "users/_usersLayout/articles/index.lazy.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/books/": {
      "filePath": "users/_usersLayout/books/index.lazy.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/conferences/": {
      "filePath": "users/_usersLayout/conferences/index.lazy.tsx",
      "parent": "/users/_usersLayout"
    }
  }
}
ROUTE_MANIFEST_END */
