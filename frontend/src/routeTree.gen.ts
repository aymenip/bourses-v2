/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UsersUsersLayoutImport } from './routes/users/_usersLayout'
import { Route as UnauthenticatedLoginImport } from './routes/_unauthenticated/login'
import { Route as AdminAdminLayoutImport } from './routes/_admin/_adminLayout'
import { Route as AdminAdminLayoutIndexImport } from './routes/_admin/_adminLayout/index'
import { Route as UsersUsersLayoutCertificatesIdImport } from './routes/users/_usersLayout/certificates/$id'
import { Route as UsersUsersLayoutBooksIdImport } from './routes/users/_usersLayout/books/$id'
import { Route as UsersUsersLayoutArticlesIdImport } from './routes/users/_usersLayout/articles/$id'
import { Route as AdminAdminLayoutTeachersIdImport } from './routes/_admin/_adminLayout/teachers/$id'
import { Route as AdminAdminLayoutStudentsIdImport } from './routes/_admin/_adminLayout/students/$id'
import { Route as AdminAdminLayoutFormsIdImport } from './routes/_admin/_adminLayout/forms/$id'
import { Route as AdminAdminLayoutEmployeesIdImport } from './routes/_admin/_adminLayout/employees/$id'
import { Route as UsersUsersLayoutSubmissionsReceiptIdImport } from './routes/users/_usersLayout/submissions/receipt/$id'
import { Route as UsersUsersLayoutSubmissionsNewIdImport } from './routes/users/_usersLayout/submissions/new/$id'
import { Route as UsersUsersLayoutSubmissionsEditIdImport } from './routes/users/_usersLayout/submissions/edit/$id'
import { Route as UsersUsersLayoutCertificatesEditIdImport } from './routes/users/_usersLayout/certificates/edit/$id'
import { Route as UsersUsersLayoutBooksEditIdImport } from './routes/users/_usersLayout/books/edit/$id'
import { Route as UsersUsersLayoutArticlesEditIdImport } from './routes/users/_usersLayout/articles/edit/$id'
import { Route as AdminAdminLayoutFormsConsultSubmissionIdImport } from './routes/_admin/_adminLayout/forms/consult/$submissionId'

// Create Virtual Routes

const UsersImport = createFileRoute('/users')()
const UsersUsersLayoutIndexLazyImport = createFileRoute(
  '/users/_usersLayout/',
)()
const UsersUsersLayoutThesesIndexLazyImport = createFileRoute(
  '/users/_usersLayout/theses/',
)()
const UsersUsersLayoutConferencesIndexLazyImport = createFileRoute(
  '/users/_usersLayout/conferences/',
)()
const UsersUsersLayoutCertificatesIndexLazyImport = createFileRoute(
  '/users/_usersLayout/certificates/',
)()
const UsersUsersLayoutBooksIndexLazyImport = createFileRoute(
  '/users/_usersLayout/books/',
)()
const UsersUsersLayoutArticlesIndexLazyImport = createFileRoute(
  '/users/_usersLayout/articles/',
)()
const AdminAdminLayoutTeachersIndexLazyImport = createFileRoute(
  '/_admin/_adminLayout/teachers/',
)()
const AdminAdminLayoutStudentsIndexLazyImport = createFileRoute(
  '/_admin/_adminLayout/students/',
)()
const AdminAdminLayoutFormsIndexLazyImport = createFileRoute(
  '/_admin/_adminLayout/forms/',
)()
const AdminAdminLayoutEmployeesIndexLazyImport = createFileRoute(
  '/_admin/_adminLayout/employees/',
)()
const UsersUsersLayoutThesesCreateLazyImport = createFileRoute(
  '/users/_usersLayout/theses/create',
)()
const UsersUsersLayoutConferencesCreateLazyImport = createFileRoute(
  '/users/_usersLayout/conferences/create',
)()
const UsersUsersLayoutCertificatesCreateLazyImport = createFileRoute(
  '/users/_usersLayout/certificates/create',
)()
const UsersUsersLayoutBooksCreateLazyImport = createFileRoute(
  '/users/_usersLayout/books/create',
)()
const UsersUsersLayoutArticlesCreateLazyImport = createFileRoute(
  '/users/_usersLayout/articles/create',
)()
const AdminAdminLayoutFormsCreateLazyImport = createFileRoute(
  '/_admin/_adminLayout/forms/create',
)()

// Create/Update Routes

const UsersRoute = UsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRoute,
} as any)

const UsersUsersLayoutRoute = UsersUsersLayoutImport.update({
  id: '/_usersLayout',
  getParentRoute: () => UsersRoute,
} as any)

const UnauthenticatedLoginRoute = UnauthenticatedLoginImport.update({
  id: '/_unauthenticated/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AdminAdminLayoutRoute = AdminAdminLayoutImport.update({
  id: '/_admin/_adminLayout',
  getParentRoute: () => rootRoute,
} as any)

const UsersUsersLayoutIndexLazyRoute = UsersUsersLayoutIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UsersUsersLayoutRoute,
} as any).lazy(() =>
  import('./routes/users/_usersLayout/index.lazy').then((d) => d.Route),
)

const AdminAdminLayoutIndexRoute = AdminAdminLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminAdminLayoutRoute,
} as any)

const UsersUsersLayoutThesesIndexLazyRoute =
  UsersUsersLayoutThesesIndexLazyImport.update({
    id: '/theses/',
    path: '/theses/',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any).lazy(() =>
    import('./routes/users/_usersLayout/theses/index.lazy').then(
      (d) => d.Route,
    ),
  )

const UsersUsersLayoutConferencesIndexLazyRoute =
  UsersUsersLayoutConferencesIndexLazyImport.update({
    id: '/conferences/',
    path: '/conferences/',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any).lazy(() =>
    import('./routes/users/_usersLayout/conferences/index.lazy').then(
      (d) => d.Route,
    ),
  )

const UsersUsersLayoutCertificatesIndexLazyRoute =
  UsersUsersLayoutCertificatesIndexLazyImport.update({
    id: '/certificates/',
    path: '/certificates/',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any).lazy(() =>
    import('./routes/users/_usersLayout/certificates/index.lazy').then(
      (d) => d.Route,
    ),
  )

const UsersUsersLayoutBooksIndexLazyRoute =
  UsersUsersLayoutBooksIndexLazyImport.update({
    id: '/books/',
    path: '/books/',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any).lazy(() =>
    import('./routes/users/_usersLayout/books/index.lazy').then((d) => d.Route),
  )

const UsersUsersLayoutArticlesIndexLazyRoute =
  UsersUsersLayoutArticlesIndexLazyImport.update({
    id: '/articles/',
    path: '/articles/',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any).lazy(() =>
    import('./routes/users/_usersLayout/articles/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AdminAdminLayoutTeachersIndexLazyRoute =
  AdminAdminLayoutTeachersIndexLazyImport.update({
    id: '/teachers/',
    path: '/teachers/',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_admin/_adminLayout/teachers/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AdminAdminLayoutStudentsIndexLazyRoute =
  AdminAdminLayoutStudentsIndexLazyImport.update({
    id: '/students/',
    path: '/students/',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_admin/_adminLayout/students/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AdminAdminLayoutFormsIndexLazyRoute =
  AdminAdminLayoutFormsIndexLazyImport.update({
    id: '/forms/',
    path: '/forms/',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_admin/_adminLayout/forms/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AdminAdminLayoutEmployeesIndexLazyRoute =
  AdminAdminLayoutEmployeesIndexLazyImport.update({
    id: '/employees/',
    path: '/employees/',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_admin/_adminLayout/employees/index.lazy').then(
      (d) => d.Route,
    ),
  )

const UsersUsersLayoutThesesCreateLazyRoute =
  UsersUsersLayoutThesesCreateLazyImport.update({
    id: '/theses/create',
    path: '/theses/create',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any).lazy(() =>
    import('./routes/users/_usersLayout/theses/create.lazy').then(
      (d) => d.Route,
    ),
  )

const UsersUsersLayoutConferencesCreateLazyRoute =
  UsersUsersLayoutConferencesCreateLazyImport.update({
    id: '/conferences/create',
    path: '/conferences/create',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any).lazy(() =>
    import('./routes/users/_usersLayout/conferences/create.lazy').then(
      (d) => d.Route,
    ),
  )

const UsersUsersLayoutCertificatesCreateLazyRoute =
  UsersUsersLayoutCertificatesCreateLazyImport.update({
    id: '/certificates/create',
    path: '/certificates/create',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any).lazy(() =>
    import('./routes/users/_usersLayout/certificates/create.lazy').then(
      (d) => d.Route,
    ),
  )

const UsersUsersLayoutBooksCreateLazyRoute =
  UsersUsersLayoutBooksCreateLazyImport.update({
    id: '/books/create',
    path: '/books/create',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any).lazy(() =>
    import('./routes/users/_usersLayout/books/create.lazy').then(
      (d) => d.Route,
    ),
  )

const UsersUsersLayoutArticlesCreateLazyRoute =
  UsersUsersLayoutArticlesCreateLazyImport.update({
    id: '/articles/create',
    path: '/articles/create',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any).lazy(() =>
    import('./routes/users/_usersLayout/articles/create.lazy').then(
      (d) => d.Route,
    ),
  )

const AdminAdminLayoutFormsCreateLazyRoute =
  AdminAdminLayoutFormsCreateLazyImport.update({
    id: '/forms/create',
    path: '/forms/create',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_admin/_adminLayout/forms/create.lazy').then(
      (d) => d.Route,
    ),
  )

const UsersUsersLayoutCertificatesIdRoute =
  UsersUsersLayoutCertificatesIdImport.update({
    id: '/certificates/$id',
    path: '/certificates/$id',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any)

const UsersUsersLayoutBooksIdRoute = UsersUsersLayoutBooksIdImport.update({
  id: '/books/$id',
  path: '/books/$id',
  getParentRoute: () => UsersUsersLayoutRoute,
} as any)

const UsersUsersLayoutArticlesIdRoute = UsersUsersLayoutArticlesIdImport.update(
  {
    id: '/articles/$id',
    path: '/articles/$id',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any,
)

const AdminAdminLayoutTeachersIdRoute = AdminAdminLayoutTeachersIdImport.update(
  {
    id: '/teachers/$id',
    path: '/teachers/$id',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any,
)

const AdminAdminLayoutStudentsIdRoute = AdminAdminLayoutStudentsIdImport.update(
  {
    id: '/students/$id',
    path: '/students/$id',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any,
)

const AdminAdminLayoutFormsIdRoute = AdminAdminLayoutFormsIdImport.update({
  id: '/forms/$id',
  path: '/forms/$id',
  getParentRoute: () => AdminAdminLayoutRoute,
} as any)

const AdminAdminLayoutEmployeesIdRoute =
  AdminAdminLayoutEmployeesIdImport.update({
    id: '/employees/$id',
    path: '/employees/$id',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any)

const UsersUsersLayoutSubmissionsReceiptIdRoute =
  UsersUsersLayoutSubmissionsReceiptIdImport.update({
    id: '/submissions/receipt/$id',
    path: '/submissions/receipt/$id',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any)

const UsersUsersLayoutSubmissionsNewIdRoute =
  UsersUsersLayoutSubmissionsNewIdImport.update({
    id: '/submissions/new/$id',
    path: '/submissions/new/$id',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any)

const UsersUsersLayoutSubmissionsEditIdRoute =
  UsersUsersLayoutSubmissionsEditIdImport.update({
    id: '/submissions/edit/$id',
    path: '/submissions/edit/$id',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any)

const UsersUsersLayoutCertificatesEditIdRoute =
  UsersUsersLayoutCertificatesEditIdImport.update({
    id: '/certificates/edit/$id',
    path: '/certificates/edit/$id',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any)

const UsersUsersLayoutBooksEditIdRoute =
  UsersUsersLayoutBooksEditIdImport.update({
    id: '/books/edit/$id',
    path: '/books/edit/$id',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any)

const UsersUsersLayoutArticlesEditIdRoute =
  UsersUsersLayoutArticlesEditIdImport.update({
    id: '/articles/edit/$id',
    path: '/articles/edit/$id',
    getParentRoute: () => UsersUsersLayoutRoute,
  } as any)

const AdminAdminLayoutFormsConsultSubmissionIdRoute =
  AdminAdminLayoutFormsConsultSubmissionIdImport.update({
    id: '/forms/consult/$submissionId',
    path: '/forms/consult/$submissionId',
    getParentRoute: () => AdminAdminLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_admin/_adminLayout': {
      id: '/_admin/_adminLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminAdminLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticated/login': {
      id: '/_unauthenticated/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnauthenticatedLoginImport
      parentRoute: typeof rootRoute
    }
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersImport
      parentRoute: typeof rootRoute
    }
    '/users/_usersLayout': {
      id: '/users/_usersLayout'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersUsersLayoutImport
      parentRoute: typeof UsersRoute
    }
    '/_admin/_adminLayout/': {
      id: '/_admin/_adminLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AdminAdminLayoutIndexImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/users/_usersLayout/': {
      id: '/users/_usersLayout/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof UsersUsersLayoutIndexLazyImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/_admin/_adminLayout/employees/$id': {
      id: '/_admin/_adminLayout/employees/$id'
      path: '/employees/$id'
      fullPath: '/employees/$id'
      preLoaderRoute: typeof AdminAdminLayoutEmployeesIdImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/_admin/_adminLayout/forms/$id': {
      id: '/_admin/_adminLayout/forms/$id'
      path: '/forms/$id'
      fullPath: '/forms/$id'
      preLoaderRoute: typeof AdminAdminLayoutFormsIdImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/_admin/_adminLayout/students/$id': {
      id: '/_admin/_adminLayout/students/$id'
      path: '/students/$id'
      fullPath: '/students/$id'
      preLoaderRoute: typeof AdminAdminLayoutStudentsIdImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/_admin/_adminLayout/teachers/$id': {
      id: '/_admin/_adminLayout/teachers/$id'
      path: '/teachers/$id'
      fullPath: '/teachers/$id'
      preLoaderRoute: typeof AdminAdminLayoutTeachersIdImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/users/_usersLayout/articles/$id': {
      id: '/users/_usersLayout/articles/$id'
      path: '/articles/$id'
      fullPath: '/users/articles/$id'
      preLoaderRoute: typeof UsersUsersLayoutArticlesIdImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/books/$id': {
      id: '/users/_usersLayout/books/$id'
      path: '/books/$id'
      fullPath: '/users/books/$id'
      preLoaderRoute: typeof UsersUsersLayoutBooksIdImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/certificates/$id': {
      id: '/users/_usersLayout/certificates/$id'
      path: '/certificates/$id'
      fullPath: '/users/certificates/$id'
      preLoaderRoute: typeof UsersUsersLayoutCertificatesIdImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/_admin/_adminLayout/forms/create': {
      id: '/_admin/_adminLayout/forms/create'
      path: '/forms/create'
      fullPath: '/forms/create'
      preLoaderRoute: typeof AdminAdminLayoutFormsCreateLazyImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/users/_usersLayout/articles/create': {
      id: '/users/_usersLayout/articles/create'
      path: '/articles/create'
      fullPath: '/users/articles/create'
      preLoaderRoute: typeof UsersUsersLayoutArticlesCreateLazyImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/books/create': {
      id: '/users/_usersLayout/books/create'
      path: '/books/create'
      fullPath: '/users/books/create'
      preLoaderRoute: typeof UsersUsersLayoutBooksCreateLazyImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/certificates/create': {
      id: '/users/_usersLayout/certificates/create'
      path: '/certificates/create'
      fullPath: '/users/certificates/create'
      preLoaderRoute: typeof UsersUsersLayoutCertificatesCreateLazyImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/conferences/create': {
      id: '/users/_usersLayout/conferences/create'
      path: '/conferences/create'
      fullPath: '/users/conferences/create'
      preLoaderRoute: typeof UsersUsersLayoutConferencesCreateLazyImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/theses/create': {
      id: '/users/_usersLayout/theses/create'
      path: '/theses/create'
      fullPath: '/users/theses/create'
      preLoaderRoute: typeof UsersUsersLayoutThesesCreateLazyImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/_admin/_adminLayout/employees/': {
      id: '/_admin/_adminLayout/employees/'
      path: '/employees'
      fullPath: '/employees'
      preLoaderRoute: typeof AdminAdminLayoutEmployeesIndexLazyImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/_admin/_adminLayout/forms/': {
      id: '/_admin/_adminLayout/forms/'
      path: '/forms'
      fullPath: '/forms'
      preLoaderRoute: typeof AdminAdminLayoutFormsIndexLazyImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/_admin/_adminLayout/students/': {
      id: '/_admin/_adminLayout/students/'
      path: '/students'
      fullPath: '/students'
      preLoaderRoute: typeof AdminAdminLayoutStudentsIndexLazyImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/_admin/_adminLayout/teachers/': {
      id: '/_admin/_adminLayout/teachers/'
      path: '/teachers'
      fullPath: '/teachers'
      preLoaderRoute: typeof AdminAdminLayoutTeachersIndexLazyImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/users/_usersLayout/articles/': {
      id: '/users/_usersLayout/articles/'
      path: '/articles'
      fullPath: '/users/articles'
      preLoaderRoute: typeof UsersUsersLayoutArticlesIndexLazyImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/books/': {
      id: '/users/_usersLayout/books/'
      path: '/books'
      fullPath: '/users/books'
      preLoaderRoute: typeof UsersUsersLayoutBooksIndexLazyImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/certificates/': {
      id: '/users/_usersLayout/certificates/'
      path: '/certificates'
      fullPath: '/users/certificates'
      preLoaderRoute: typeof UsersUsersLayoutCertificatesIndexLazyImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/conferences/': {
      id: '/users/_usersLayout/conferences/'
      path: '/conferences'
      fullPath: '/users/conferences'
      preLoaderRoute: typeof UsersUsersLayoutConferencesIndexLazyImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/theses/': {
      id: '/users/_usersLayout/theses/'
      path: '/theses'
      fullPath: '/users/theses'
      preLoaderRoute: typeof UsersUsersLayoutThesesIndexLazyImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/_admin/_adminLayout/forms/consult/$submissionId': {
      id: '/_admin/_adminLayout/forms/consult/$submissionId'
      path: '/forms/consult/$submissionId'
      fullPath: '/forms/consult/$submissionId'
      preLoaderRoute: typeof AdminAdminLayoutFormsConsultSubmissionIdImport
      parentRoute: typeof AdminAdminLayoutImport
    }
    '/users/_usersLayout/articles/edit/$id': {
      id: '/users/_usersLayout/articles/edit/$id'
      path: '/articles/edit/$id'
      fullPath: '/users/articles/edit/$id'
      preLoaderRoute: typeof UsersUsersLayoutArticlesEditIdImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/books/edit/$id': {
      id: '/users/_usersLayout/books/edit/$id'
      path: '/books/edit/$id'
      fullPath: '/users/books/edit/$id'
      preLoaderRoute: typeof UsersUsersLayoutBooksEditIdImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/certificates/edit/$id': {
      id: '/users/_usersLayout/certificates/edit/$id'
      path: '/certificates/edit/$id'
      fullPath: '/users/certificates/edit/$id'
      preLoaderRoute: typeof UsersUsersLayoutCertificatesEditIdImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/submissions/edit/$id': {
      id: '/users/_usersLayout/submissions/edit/$id'
      path: '/submissions/edit/$id'
      fullPath: '/users/submissions/edit/$id'
      preLoaderRoute: typeof UsersUsersLayoutSubmissionsEditIdImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/submissions/new/$id': {
      id: '/users/_usersLayout/submissions/new/$id'
      path: '/submissions/new/$id'
      fullPath: '/users/submissions/new/$id'
      preLoaderRoute: typeof UsersUsersLayoutSubmissionsNewIdImport
      parentRoute: typeof UsersUsersLayoutImport
    }
    '/users/_usersLayout/submissions/receipt/$id': {
      id: '/users/_usersLayout/submissions/receipt/$id'
      path: '/submissions/receipt/$id'
      fullPath: '/users/submissions/receipt/$id'
      preLoaderRoute: typeof UsersUsersLayoutSubmissionsReceiptIdImport
      parentRoute: typeof UsersUsersLayoutImport
    }
  }
}

// Create and export the route tree

interface AdminAdminLayoutRouteChildren {
  AdminAdminLayoutIndexRoute: typeof AdminAdminLayoutIndexRoute
  AdminAdminLayoutEmployeesIdRoute: typeof AdminAdminLayoutEmployeesIdRoute
  AdminAdminLayoutFormsIdRoute: typeof AdminAdminLayoutFormsIdRoute
  AdminAdminLayoutStudentsIdRoute: typeof AdminAdminLayoutStudentsIdRoute
  AdminAdminLayoutTeachersIdRoute: typeof AdminAdminLayoutTeachersIdRoute
  AdminAdminLayoutFormsCreateLazyRoute: typeof AdminAdminLayoutFormsCreateLazyRoute
  AdminAdminLayoutEmployeesIndexLazyRoute: typeof AdminAdminLayoutEmployeesIndexLazyRoute
  AdminAdminLayoutFormsIndexLazyRoute: typeof AdminAdminLayoutFormsIndexLazyRoute
  AdminAdminLayoutStudentsIndexLazyRoute: typeof AdminAdminLayoutStudentsIndexLazyRoute
  AdminAdminLayoutTeachersIndexLazyRoute: typeof AdminAdminLayoutTeachersIndexLazyRoute
  AdminAdminLayoutFormsConsultSubmissionIdRoute: typeof AdminAdminLayoutFormsConsultSubmissionIdRoute
}

const AdminAdminLayoutRouteChildren: AdminAdminLayoutRouteChildren = {
  AdminAdminLayoutIndexRoute: AdminAdminLayoutIndexRoute,
  AdminAdminLayoutEmployeesIdRoute: AdminAdminLayoutEmployeesIdRoute,
  AdminAdminLayoutFormsIdRoute: AdminAdminLayoutFormsIdRoute,
  AdminAdminLayoutStudentsIdRoute: AdminAdminLayoutStudentsIdRoute,
  AdminAdminLayoutTeachersIdRoute: AdminAdminLayoutTeachersIdRoute,
  AdminAdminLayoutFormsCreateLazyRoute: AdminAdminLayoutFormsCreateLazyRoute,
  AdminAdminLayoutEmployeesIndexLazyRoute:
    AdminAdminLayoutEmployeesIndexLazyRoute,
  AdminAdminLayoutFormsIndexLazyRoute: AdminAdminLayoutFormsIndexLazyRoute,
  AdminAdminLayoutStudentsIndexLazyRoute:
    AdminAdminLayoutStudentsIndexLazyRoute,
  AdminAdminLayoutTeachersIndexLazyRoute:
    AdminAdminLayoutTeachersIndexLazyRoute,
  AdminAdminLayoutFormsConsultSubmissionIdRoute:
    AdminAdminLayoutFormsConsultSubmissionIdRoute,
}

const AdminAdminLayoutRouteWithChildren =
  AdminAdminLayoutRoute._addFileChildren(AdminAdminLayoutRouteChildren)

interface UsersUsersLayoutRouteChildren {
  UsersUsersLayoutIndexLazyRoute: typeof UsersUsersLayoutIndexLazyRoute
  UsersUsersLayoutArticlesIdRoute: typeof UsersUsersLayoutArticlesIdRoute
  UsersUsersLayoutBooksIdRoute: typeof UsersUsersLayoutBooksIdRoute
  UsersUsersLayoutCertificatesIdRoute: typeof UsersUsersLayoutCertificatesIdRoute
  UsersUsersLayoutArticlesCreateLazyRoute: typeof UsersUsersLayoutArticlesCreateLazyRoute
  UsersUsersLayoutBooksCreateLazyRoute: typeof UsersUsersLayoutBooksCreateLazyRoute
  UsersUsersLayoutCertificatesCreateLazyRoute: typeof UsersUsersLayoutCertificatesCreateLazyRoute
  UsersUsersLayoutConferencesCreateLazyRoute: typeof UsersUsersLayoutConferencesCreateLazyRoute
  UsersUsersLayoutThesesCreateLazyRoute: typeof UsersUsersLayoutThesesCreateLazyRoute
  UsersUsersLayoutArticlesIndexLazyRoute: typeof UsersUsersLayoutArticlesIndexLazyRoute
  UsersUsersLayoutBooksIndexLazyRoute: typeof UsersUsersLayoutBooksIndexLazyRoute
  UsersUsersLayoutCertificatesIndexLazyRoute: typeof UsersUsersLayoutCertificatesIndexLazyRoute
  UsersUsersLayoutConferencesIndexLazyRoute: typeof UsersUsersLayoutConferencesIndexLazyRoute
  UsersUsersLayoutThesesIndexLazyRoute: typeof UsersUsersLayoutThesesIndexLazyRoute
  UsersUsersLayoutArticlesEditIdRoute: typeof UsersUsersLayoutArticlesEditIdRoute
  UsersUsersLayoutBooksEditIdRoute: typeof UsersUsersLayoutBooksEditIdRoute
  UsersUsersLayoutCertificatesEditIdRoute: typeof UsersUsersLayoutCertificatesEditIdRoute
  UsersUsersLayoutSubmissionsEditIdRoute: typeof UsersUsersLayoutSubmissionsEditIdRoute
  UsersUsersLayoutSubmissionsNewIdRoute: typeof UsersUsersLayoutSubmissionsNewIdRoute
  UsersUsersLayoutSubmissionsReceiptIdRoute: typeof UsersUsersLayoutSubmissionsReceiptIdRoute
}

const UsersUsersLayoutRouteChildren: UsersUsersLayoutRouteChildren = {
  UsersUsersLayoutIndexLazyRoute: UsersUsersLayoutIndexLazyRoute,
  UsersUsersLayoutArticlesIdRoute: UsersUsersLayoutArticlesIdRoute,
  UsersUsersLayoutBooksIdRoute: UsersUsersLayoutBooksIdRoute,
  UsersUsersLayoutCertificatesIdRoute: UsersUsersLayoutCertificatesIdRoute,
  UsersUsersLayoutArticlesCreateLazyRoute:
    UsersUsersLayoutArticlesCreateLazyRoute,
  UsersUsersLayoutBooksCreateLazyRoute: UsersUsersLayoutBooksCreateLazyRoute,
  UsersUsersLayoutCertificatesCreateLazyRoute:
    UsersUsersLayoutCertificatesCreateLazyRoute,
  UsersUsersLayoutConferencesCreateLazyRoute:
    UsersUsersLayoutConferencesCreateLazyRoute,
  UsersUsersLayoutThesesCreateLazyRoute: UsersUsersLayoutThesesCreateLazyRoute,
  UsersUsersLayoutArticlesIndexLazyRoute:
    UsersUsersLayoutArticlesIndexLazyRoute,
  UsersUsersLayoutBooksIndexLazyRoute: UsersUsersLayoutBooksIndexLazyRoute,
  UsersUsersLayoutCertificatesIndexLazyRoute:
    UsersUsersLayoutCertificatesIndexLazyRoute,
  UsersUsersLayoutConferencesIndexLazyRoute:
    UsersUsersLayoutConferencesIndexLazyRoute,
  UsersUsersLayoutThesesIndexLazyRoute: UsersUsersLayoutThesesIndexLazyRoute,
  UsersUsersLayoutArticlesEditIdRoute: UsersUsersLayoutArticlesEditIdRoute,
  UsersUsersLayoutBooksEditIdRoute: UsersUsersLayoutBooksEditIdRoute,
  UsersUsersLayoutCertificatesEditIdRoute:
    UsersUsersLayoutCertificatesEditIdRoute,
  UsersUsersLayoutSubmissionsEditIdRoute:
    UsersUsersLayoutSubmissionsEditIdRoute,
  UsersUsersLayoutSubmissionsNewIdRoute: UsersUsersLayoutSubmissionsNewIdRoute,
  UsersUsersLayoutSubmissionsReceiptIdRoute:
    UsersUsersLayoutSubmissionsReceiptIdRoute,
}

const UsersUsersLayoutRouteWithChildren =
  UsersUsersLayoutRoute._addFileChildren(UsersUsersLayoutRouteChildren)

interface UsersRouteChildren {
  UsersUsersLayoutRoute: typeof UsersUsersLayoutRouteWithChildren
}

const UsersRouteChildren: UsersRouteChildren = {
  UsersUsersLayoutRoute: UsersUsersLayoutRouteWithChildren,
}

const UsersRouteWithChildren = UsersRoute._addFileChildren(UsersRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AdminAdminLayoutRouteWithChildren
  '/login': typeof UnauthenticatedLoginRoute
  '/users': typeof UsersUsersLayoutRouteWithChildren
  '/': typeof AdminAdminLayoutIndexRoute
  '/users/': typeof UsersUsersLayoutIndexLazyRoute
  '/employees/$id': typeof AdminAdminLayoutEmployeesIdRoute
  '/forms/$id': typeof AdminAdminLayoutFormsIdRoute
  '/students/$id': typeof AdminAdminLayoutStudentsIdRoute
  '/teachers/$id': typeof AdminAdminLayoutTeachersIdRoute
  '/users/articles/$id': typeof UsersUsersLayoutArticlesIdRoute
  '/users/books/$id': typeof UsersUsersLayoutBooksIdRoute
  '/users/certificates/$id': typeof UsersUsersLayoutCertificatesIdRoute
  '/forms/create': typeof AdminAdminLayoutFormsCreateLazyRoute
  '/users/articles/create': typeof UsersUsersLayoutArticlesCreateLazyRoute
  '/users/books/create': typeof UsersUsersLayoutBooksCreateLazyRoute
  '/users/certificates/create': typeof UsersUsersLayoutCertificatesCreateLazyRoute
  '/users/conferences/create': typeof UsersUsersLayoutConferencesCreateLazyRoute
  '/users/theses/create': typeof UsersUsersLayoutThesesCreateLazyRoute
  '/employees': typeof AdminAdminLayoutEmployeesIndexLazyRoute
  '/forms': typeof AdminAdminLayoutFormsIndexLazyRoute
  '/students': typeof AdminAdminLayoutStudentsIndexLazyRoute
  '/teachers': typeof AdminAdminLayoutTeachersIndexLazyRoute
  '/users/articles': typeof UsersUsersLayoutArticlesIndexLazyRoute
  '/users/books': typeof UsersUsersLayoutBooksIndexLazyRoute
  '/users/certificates': typeof UsersUsersLayoutCertificatesIndexLazyRoute
  '/users/conferences': typeof UsersUsersLayoutConferencesIndexLazyRoute
  '/users/theses': typeof UsersUsersLayoutThesesIndexLazyRoute
  '/forms/consult/$submissionId': typeof AdminAdminLayoutFormsConsultSubmissionIdRoute
  '/users/articles/edit/$id': typeof UsersUsersLayoutArticlesEditIdRoute
  '/users/books/edit/$id': typeof UsersUsersLayoutBooksEditIdRoute
  '/users/certificates/edit/$id': typeof UsersUsersLayoutCertificatesEditIdRoute
  '/users/submissions/edit/$id': typeof UsersUsersLayoutSubmissionsEditIdRoute
  '/users/submissions/new/$id': typeof UsersUsersLayoutSubmissionsNewIdRoute
  '/users/submissions/receipt/$id': typeof UsersUsersLayoutSubmissionsReceiptIdRoute
}

export interface FileRoutesByTo {
  '/login': typeof UnauthenticatedLoginRoute
  '/users': typeof UsersUsersLayoutIndexLazyRoute
  '/': typeof AdminAdminLayoutIndexRoute
  '/employees/$id': typeof AdminAdminLayoutEmployeesIdRoute
  '/forms/$id': typeof AdminAdminLayoutFormsIdRoute
  '/students/$id': typeof AdminAdminLayoutStudentsIdRoute
  '/teachers/$id': typeof AdminAdminLayoutTeachersIdRoute
  '/users/articles/$id': typeof UsersUsersLayoutArticlesIdRoute
  '/users/books/$id': typeof UsersUsersLayoutBooksIdRoute
  '/users/certificates/$id': typeof UsersUsersLayoutCertificatesIdRoute
  '/forms/create': typeof AdminAdminLayoutFormsCreateLazyRoute
  '/users/articles/create': typeof UsersUsersLayoutArticlesCreateLazyRoute
  '/users/books/create': typeof UsersUsersLayoutBooksCreateLazyRoute
  '/users/certificates/create': typeof UsersUsersLayoutCertificatesCreateLazyRoute
  '/users/conferences/create': typeof UsersUsersLayoutConferencesCreateLazyRoute
  '/users/theses/create': typeof UsersUsersLayoutThesesCreateLazyRoute
  '/employees': typeof AdminAdminLayoutEmployeesIndexLazyRoute
  '/forms': typeof AdminAdminLayoutFormsIndexLazyRoute
  '/students': typeof AdminAdminLayoutStudentsIndexLazyRoute
  '/teachers': typeof AdminAdminLayoutTeachersIndexLazyRoute
  '/users/articles': typeof UsersUsersLayoutArticlesIndexLazyRoute
  '/users/books': typeof UsersUsersLayoutBooksIndexLazyRoute
  '/users/certificates': typeof UsersUsersLayoutCertificatesIndexLazyRoute
  '/users/conferences': typeof UsersUsersLayoutConferencesIndexLazyRoute
  '/users/theses': typeof UsersUsersLayoutThesesIndexLazyRoute
  '/forms/consult/$submissionId': typeof AdminAdminLayoutFormsConsultSubmissionIdRoute
  '/users/articles/edit/$id': typeof UsersUsersLayoutArticlesEditIdRoute
  '/users/books/edit/$id': typeof UsersUsersLayoutBooksEditIdRoute
  '/users/certificates/edit/$id': typeof UsersUsersLayoutCertificatesEditIdRoute
  '/users/submissions/edit/$id': typeof UsersUsersLayoutSubmissionsEditIdRoute
  '/users/submissions/new/$id': typeof UsersUsersLayoutSubmissionsNewIdRoute
  '/users/submissions/receipt/$id': typeof UsersUsersLayoutSubmissionsReceiptIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_admin/_adminLayout': typeof AdminAdminLayoutRouteWithChildren
  '/_unauthenticated/login': typeof UnauthenticatedLoginRoute
  '/users': typeof UsersRouteWithChildren
  '/users/_usersLayout': typeof UsersUsersLayoutRouteWithChildren
  '/_admin/_adminLayout/': typeof AdminAdminLayoutIndexRoute
  '/users/_usersLayout/': typeof UsersUsersLayoutIndexLazyRoute
  '/_admin/_adminLayout/employees/$id': typeof AdminAdminLayoutEmployeesIdRoute
  '/_admin/_adminLayout/forms/$id': typeof AdminAdminLayoutFormsIdRoute
  '/_admin/_adminLayout/students/$id': typeof AdminAdminLayoutStudentsIdRoute
  '/_admin/_adminLayout/teachers/$id': typeof AdminAdminLayoutTeachersIdRoute
  '/users/_usersLayout/articles/$id': typeof UsersUsersLayoutArticlesIdRoute
  '/users/_usersLayout/books/$id': typeof UsersUsersLayoutBooksIdRoute
  '/users/_usersLayout/certificates/$id': typeof UsersUsersLayoutCertificatesIdRoute
  '/_admin/_adminLayout/forms/create': typeof AdminAdminLayoutFormsCreateLazyRoute
  '/users/_usersLayout/articles/create': typeof UsersUsersLayoutArticlesCreateLazyRoute
  '/users/_usersLayout/books/create': typeof UsersUsersLayoutBooksCreateLazyRoute
  '/users/_usersLayout/certificates/create': typeof UsersUsersLayoutCertificatesCreateLazyRoute
  '/users/_usersLayout/conferences/create': typeof UsersUsersLayoutConferencesCreateLazyRoute
  '/users/_usersLayout/theses/create': typeof UsersUsersLayoutThesesCreateLazyRoute
  '/_admin/_adminLayout/employees/': typeof AdminAdminLayoutEmployeesIndexLazyRoute
  '/_admin/_adminLayout/forms/': typeof AdminAdminLayoutFormsIndexLazyRoute
  '/_admin/_adminLayout/students/': typeof AdminAdminLayoutStudentsIndexLazyRoute
  '/_admin/_adminLayout/teachers/': typeof AdminAdminLayoutTeachersIndexLazyRoute
  '/users/_usersLayout/articles/': typeof UsersUsersLayoutArticlesIndexLazyRoute
  '/users/_usersLayout/books/': typeof UsersUsersLayoutBooksIndexLazyRoute
  '/users/_usersLayout/certificates/': typeof UsersUsersLayoutCertificatesIndexLazyRoute
  '/users/_usersLayout/conferences/': typeof UsersUsersLayoutConferencesIndexLazyRoute
  '/users/_usersLayout/theses/': typeof UsersUsersLayoutThesesIndexLazyRoute
  '/_admin/_adminLayout/forms/consult/$submissionId': typeof AdminAdminLayoutFormsConsultSubmissionIdRoute
  '/users/_usersLayout/articles/edit/$id': typeof UsersUsersLayoutArticlesEditIdRoute
  '/users/_usersLayout/books/edit/$id': typeof UsersUsersLayoutBooksEditIdRoute
  '/users/_usersLayout/certificates/edit/$id': typeof UsersUsersLayoutCertificatesEditIdRoute
  '/users/_usersLayout/submissions/edit/$id': typeof UsersUsersLayoutSubmissionsEditIdRoute
  '/users/_usersLayout/submissions/new/$id': typeof UsersUsersLayoutSubmissionsNewIdRoute
  '/users/_usersLayout/submissions/receipt/$id': typeof UsersUsersLayoutSubmissionsReceiptIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/users'
    | '/'
    | '/users/'
    | '/employees/$id'
    | '/forms/$id'
    | '/students/$id'
    | '/teachers/$id'
    | '/users/articles/$id'
    | '/users/books/$id'
    | '/users/certificates/$id'
    | '/forms/create'
    | '/users/articles/create'
    | '/users/books/create'
    | '/users/certificates/create'
    | '/users/conferences/create'
    | '/users/theses/create'
    | '/employees'
    | '/forms'
    | '/students'
    | '/teachers'
    | '/users/articles'
    | '/users/books'
    | '/users/certificates'
    | '/users/conferences'
    | '/users/theses'
    | '/forms/consult/$submissionId'
    | '/users/articles/edit/$id'
    | '/users/books/edit/$id'
    | '/users/certificates/edit/$id'
    | '/users/submissions/edit/$id'
    | '/users/submissions/new/$id'
    | '/users/submissions/receipt/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/users'
    | '/'
    | '/employees/$id'
    | '/forms/$id'
    | '/students/$id'
    | '/teachers/$id'
    | '/users/articles/$id'
    | '/users/books/$id'
    | '/users/certificates/$id'
    | '/forms/create'
    | '/users/articles/create'
    | '/users/books/create'
    | '/users/certificates/create'
    | '/users/conferences/create'
    | '/users/theses/create'
    | '/employees'
    | '/forms'
    | '/students'
    | '/teachers'
    | '/users/articles'
    | '/users/books'
    | '/users/certificates'
    | '/users/conferences'
    | '/users/theses'
    | '/forms/consult/$submissionId'
    | '/users/articles/edit/$id'
    | '/users/books/edit/$id'
    | '/users/certificates/edit/$id'
    | '/users/submissions/edit/$id'
    | '/users/submissions/new/$id'
    | '/users/submissions/receipt/$id'
  id:
    | '__root__'
    | '/_admin/_adminLayout'
    | '/_unauthenticated/login'
    | '/users'
    | '/users/_usersLayout'
    | '/_admin/_adminLayout/'
    | '/users/_usersLayout/'
    | '/_admin/_adminLayout/employees/$id'
    | '/_admin/_adminLayout/forms/$id'
    | '/_admin/_adminLayout/students/$id'
    | '/_admin/_adminLayout/teachers/$id'
    | '/users/_usersLayout/articles/$id'
    | '/users/_usersLayout/books/$id'
    | '/users/_usersLayout/certificates/$id'
    | '/_admin/_adminLayout/forms/create'
    | '/users/_usersLayout/articles/create'
    | '/users/_usersLayout/books/create'
    | '/users/_usersLayout/certificates/create'
    | '/users/_usersLayout/conferences/create'
    | '/users/_usersLayout/theses/create'
    | '/_admin/_adminLayout/employees/'
    | '/_admin/_adminLayout/forms/'
    | '/_admin/_adminLayout/students/'
    | '/_admin/_adminLayout/teachers/'
    | '/users/_usersLayout/articles/'
    | '/users/_usersLayout/books/'
    | '/users/_usersLayout/certificates/'
    | '/users/_usersLayout/conferences/'
    | '/users/_usersLayout/theses/'
    | '/_admin/_adminLayout/forms/consult/$submissionId'
    | '/users/_usersLayout/articles/edit/$id'
    | '/users/_usersLayout/books/edit/$id'
    | '/users/_usersLayout/certificates/edit/$id'
    | '/users/_usersLayout/submissions/edit/$id'
    | '/users/_usersLayout/submissions/new/$id'
    | '/users/_usersLayout/submissions/receipt/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AdminAdminLayoutRoute: typeof AdminAdminLayoutRouteWithChildren
  UnauthenticatedLoginRoute: typeof UnauthenticatedLoginRoute
  UsersRoute: typeof UsersRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AdminAdminLayoutRoute: AdminAdminLayoutRouteWithChildren,
  UnauthenticatedLoginRoute: UnauthenticatedLoginRoute,
  UsersRoute: UsersRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_admin/_adminLayout",
        "/_unauthenticated/login",
        "/users"
      ]
    },
    "/_admin/_adminLayout": {
      "filePath": "_admin/_adminLayout.tsx",
      "children": [
        "/_admin/_adminLayout/",
        "/_admin/_adminLayout/employees/$id",
        "/_admin/_adminLayout/forms/$id",
        "/_admin/_adminLayout/students/$id",
        "/_admin/_adminLayout/teachers/$id",
        "/_admin/_adminLayout/forms/create",
        "/_admin/_adminLayout/employees/",
        "/_admin/_adminLayout/forms/",
        "/_admin/_adminLayout/students/",
        "/_admin/_adminLayout/teachers/",
        "/_admin/_adminLayout/forms/consult/$submissionId"
      ]
    },
    "/_unauthenticated/login": {
      "filePath": "_unauthenticated/login.tsx"
    },
    "/users": {
      "filePath": "users",
      "children": [
        "/users/_usersLayout"
      ]
    },
    "/users/_usersLayout": {
      "filePath": "users/_usersLayout.tsx",
      "parent": "/users",
      "children": [
        "/users/_usersLayout/",
        "/users/_usersLayout/articles/$id",
        "/users/_usersLayout/books/$id",
        "/users/_usersLayout/certificates/$id",
        "/users/_usersLayout/articles/create",
        "/users/_usersLayout/books/create",
        "/users/_usersLayout/certificates/create",
        "/users/_usersLayout/conferences/create",
        "/users/_usersLayout/theses/create",
        "/users/_usersLayout/articles/",
        "/users/_usersLayout/books/",
        "/users/_usersLayout/certificates/",
        "/users/_usersLayout/conferences/",
        "/users/_usersLayout/theses/",
        "/users/_usersLayout/articles/edit/$id",
        "/users/_usersLayout/books/edit/$id",
        "/users/_usersLayout/certificates/edit/$id",
        "/users/_usersLayout/submissions/edit/$id",
        "/users/_usersLayout/submissions/new/$id",
        "/users/_usersLayout/submissions/receipt/$id"
      ]
    },
    "/_admin/_adminLayout/": {
      "filePath": "_admin/_adminLayout/index.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/users/_usersLayout/": {
      "filePath": "users/_usersLayout/index.lazy.tsx",
      "parent": "/users/_usersLayout"
    },
    "/_admin/_adminLayout/employees/$id": {
      "filePath": "_admin/_adminLayout/employees/$id.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/_admin/_adminLayout/forms/$id": {
      "filePath": "_admin/_adminLayout/forms/$id.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/_admin/_adminLayout/students/$id": {
      "filePath": "_admin/_adminLayout/students/$id.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/_admin/_adminLayout/teachers/$id": {
      "filePath": "_admin/_adminLayout/teachers/$id.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/users/_usersLayout/articles/$id": {
      "filePath": "users/_usersLayout/articles/$id.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/books/$id": {
      "filePath": "users/_usersLayout/books/$id.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/certificates/$id": {
      "filePath": "users/_usersLayout/certificates/$id.tsx",
      "parent": "/users/_usersLayout"
    },
    "/_admin/_adminLayout/forms/create": {
      "filePath": "_admin/_adminLayout/forms/create.lazy.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/users/_usersLayout/articles/create": {
      "filePath": "users/_usersLayout/articles/create.lazy.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/books/create": {
      "filePath": "users/_usersLayout/books/create.lazy.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/certificates/create": {
      "filePath": "users/_usersLayout/certificates/create.lazy.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/conferences/create": {
      "filePath": "users/_usersLayout/conferences/create.lazy.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/theses/create": {
      "filePath": "users/_usersLayout/theses/create.lazy.tsx",
      "parent": "/users/_usersLayout"
    },
    "/_admin/_adminLayout/employees/": {
      "filePath": "_admin/_adminLayout/employees/index.lazy.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/_admin/_adminLayout/forms/": {
      "filePath": "_admin/_adminLayout/forms/index.lazy.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/_admin/_adminLayout/students/": {
      "filePath": "_admin/_adminLayout/students/index.lazy.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/_admin/_adminLayout/teachers/": {
      "filePath": "_admin/_adminLayout/teachers/index.lazy.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/users/_usersLayout/articles/": {
      "filePath": "users/_usersLayout/articles/index.lazy.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/books/": {
      "filePath": "users/_usersLayout/books/index.lazy.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/certificates/": {
      "filePath": "users/_usersLayout/certificates/index.lazy.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/conferences/": {
      "filePath": "users/_usersLayout/conferences/index.lazy.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/theses/": {
      "filePath": "users/_usersLayout/theses/index.lazy.tsx",
      "parent": "/users/_usersLayout"
    },
    "/_admin/_adminLayout/forms/consult/$submissionId": {
      "filePath": "_admin/_adminLayout/forms/consult/$submissionId.tsx",
      "parent": "/_admin/_adminLayout"
    },
    "/users/_usersLayout/articles/edit/$id": {
      "filePath": "users/_usersLayout/articles/edit/$id.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/books/edit/$id": {
      "filePath": "users/_usersLayout/books/edit/$id.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/certificates/edit/$id": {
      "filePath": "users/_usersLayout/certificates/edit/$id.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/submissions/edit/$id": {
      "filePath": "users/_usersLayout/submissions/edit/$id.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/submissions/new/$id": {
      "filePath": "users/_usersLayout/submissions/new/$id.tsx",
      "parent": "/users/_usersLayout"
    },
    "/users/_usersLayout/submissions/receipt/$id": {
      "filePath": "users/_usersLayout/submissions/receipt/$id.tsx",
      "parent": "/users/_usersLayout"
    }
  }
}
ROUTE_MANIFEST_END */
